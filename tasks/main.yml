- name: Update package lists
  apt:
    update_cache: yes

- name: Install Apache HTTP Server
  apt:
    name: apache2
    state: present

- name: Install PHP-FPM and necessary modules
  apt:
    name:
      - php
      - php-fpm
      - php-common
      - php-cli
      - php-mysql
      - php-pgsql
      - php-pdo
      - php-mbstring
      - php-zip
      - zip
      - unzip
    state: present

- name: Restart Apache HTTP Server
  service:
    name: apache2
    state: restarted






- name: Install PostgreSQL and its PHP extension
  apt:
    name:
      - postgresql
      - postgresql-contrib
      - php-pgsql
    state: present

- name: Create a new PostgreSQL user and database
  become_user: postgres
  postgresql_user:
    name: "{{ postgresql_username }}"
    password: "{{ postgresql_password }}"
    encrypted: yes
  become: true

- name: Create a new PostgreSQL database
  become_user: postgres
  postgresql_db:
    name: "{{ postgresql_database }}"
    owner: "{{ postgresql_username }}"
  become: true

- name: Grant all privileges on the PostgreSQL database to the user
  become_user: postgres
  postgresql_privs:
    db: "{{ postgresql_database }}"
    privs: ALL
    role: "{{ postgresql_username }}"
    objs: ALL_IN_SCHEMA
  become: true

- name: Import dump.sql and set user privileges
  become_user: postgres
  postgresql_db:
    name: "{{ postgresql_database }}"
    state: import
    target: /vagrant/provision/dump.sql
  become: true

- name: View users and databases in PostgreSQL
  become_user: postgres
  command: psql -c "\du"
  register: postgresql_users
  become: true

- debug:
    var: postgresql_users.stdout_lines

- name: View databases in PostgreSQL
  become_user: postgres
  command: psql -c "\list"
  register: postgresql_databases
  become: true

- debug:
    var: postgresql_databases.stdout_lines






    

- name: Install Composer (PHP)
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer-setup.php

- name: Run Composer installer
  command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  args:
    creates: /usr/local/bin/composer

- name: Install dependencies for websockets server
  become_user: vagrant
  shell: composer install
  args:
    chdir: /vagrant/ws

- name: Install dependencies for webapp
  become_user: vagrant
  shell: composer install
  args:
    chdir: /vagrant/app

- name: Copy Apache configuration
  template:
    src: projectA.conf.j2
    dest: /etc/apache2/sites-available/projectA.conf
    owner: root
    group: root
    mode: 0644

- name: Disable the default Apache site
  apache2_module:
    state: absent
    name: 000-default

- name: Enable the projectA Apache site
  apache2_module:
    state: present
    name: projectA

- name: Reload Apache service
  service:
    name: apache2
    state: reloaded

- name: Update deploy date @ .env file
  become_user: vagrant
  command: TZ=Europe/Lisbon date -Iseconds
  register: iso_date

- name: Update deploy date in .env file
  lineinfile:
    path: /vagrant/app/.env
    regexp: '^DEPLOY_DATE='
    line: "DEPLOY_DATE=\"{{ iso_date.stdout }}\""

- name: Display completion message
  debug:
    msg: "Finished! Visit http://192.168.44.10"